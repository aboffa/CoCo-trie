name: Build_and_test

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: RelWithDebInfo
  CC: gcc-10
  CXX: g++-10

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # install dependencies
      - name: boost and complilers
        run: sudo apt-get update && sudo apt-get install -yq libboost-all-dev libc++-10-dev cmake gcc-10 g++-10

      - name: Install gtest manually
        run: sudo apt-get install -yq libgtest-dev

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Git Sumbodule Update
        run:
          git submodule update --init --recursive

      - name: Add adapted code
        shell: bash
        working-directory: ${{runner.workspace}}/CoCo-trie
        run: |
          chmod +x ./lib/adapted_code/move.sh
          ./lib/adapted_code/move.sh

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE

      - name: Test utils
        working-directory: ${{runner.workspace}}/build/test
        shell: bash
        run: ./tests_utils

      - name: Test single encoders
        working-directory: ${{runner.workspace}}/build/test
        shell: bash
        run: ./tests_single_encoders_128

      - name: Move datasets
        working-directory: ${{runner.workspace}}/build/test
        shell: bash
        run: |
          mkdir ../../dataset
          cp $GITHUB_WORKSPACE/dataset/* ../../dataset/

      - name: Test entire trie uint128_t small/big alphabet
        working-directory: ${{runner.workspace}}/build/test
        shell: bash
        run: |
          ./tests_entire_trie_128_small_alphabet
          ./tests_entire_trie_128_big_alphabet

      - name: Test serialize and load
        working-directory: ${{runner.workspace}}/build/test
        shell: bash
        run: ./tests_serialize_load